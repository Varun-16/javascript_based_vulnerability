require 'rubygems'
require 'stemmer'
require 'classifier'
require 'open-uri'
require 'nokogiri'
require_relative 'app.rb'

final_num = 0

all_data = []

while(final_num < 100)
final_num += 1

# Load previous classifications
not_vulnerable = []
vulnerable = []
count = 0
while count == 0
  count = rand(110)
end
limit = (count + 100)%120
size = (count + 19)%120

puts "Count = #{count}, limit = #{limit}, size = #{size}"

tmp_var = 0
while(tmp_var < 100)
	tmp_var+=1
	site = Xsssite.find(count)
	if site.status.length == 9
		# puts site.domain.strip
		vulnerable += site.scripts
	else
		# puts site.domain
		not_vulnerable += site.scripts
	end
	count +=1
	if (count > 120)
		count = 1
	end
end

# Xsssite.all.each do |site|
# 	# puts site.status.to_s.strip
# 	if count > 100
# 		break
# 	if site.status.length == 9
# 		# puts site.domain.strip
# 		vulnerable += site.scripts
# 	else
# 		# puts site.domain
# 		not_vulnerable += site.scripts
# 	end
# 	count +=1
# end
# not_funny = YAML::load_file('not_funny.yml')

# Create our Bayes / LSI classifier
classifier = Classifier::Bayes.new('Vulnerable', 'Not vulnerable')

# # Train the classifier
not_vulnerable.each { |script| classifier.train_not_vulnerable script.content }
vulnerable.each { |script| classifier.train_vulnerable script.content }

# not_vulnerable.each do |script| 
# 	# if classifier.classify script.content
# 	#   # puts script.content 
# 	# end
# end

puts "DONE!!"

not_vulnerable = []
vulnerable = []

def get_script site
	html = Nokogiri::HTML(open(site).read)
	scripts = []
	html.css('script').each do |script|
	    if not script.content.empty?
		  #Data here
		  scripts << script.content.strip
	    end
	end
	scripts
end

def check_site site
	get_script(site).each do |f|
		puts classifier.classify f
		# puts f.class
		# if classifier.classify f.to_s == "Vulnerable"
		# 	puts "Vulnerable"
		# end
	end
end

# check_site "http://www.google.com"

correct = 0
wrong  = 0
# count = 1

tmp_var1 = 0

puts "count = #{count}"

while(tmp_var1 < 20)
	tmp_var1+=1
	flag = 0
	site2 = Xsssite.find(count) 
	site2.scripts.each do |f|
		out = classifier.classify f.content.to_s
		if out == "Vulnerable"
			flag -=1
		else
			flag +=1
		end
	end
	if flag >= 0 and site2.status.length == 7
		correct += 1
	elsif flag <= 0 and site2.status.length == 9
		correct += 1
	else
		wrong += 1
	end
	count += 1
	if (count > 120)
		count = 1
	end
end

puts "count = #{count}"

accuracy = (correct/20)*100
all_data << accuracy
puts accuracy

end

sum = 0
all_data.each do |f|
 sum += f
end
puts "Average accuracy = #{sum/all_data.length}" 
# puts classifier.classify "alert(document.cookie);"